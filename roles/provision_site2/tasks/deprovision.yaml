- name: grab facts for workshop
  ec2_instance_facts:
    region: "{{ ec2_region }}"
    filters:
      instance-state-name: running
      "tag:project": "{{ec2_name_prefix}}"
  register: all_nodes


- name: destroy EC2 instances
  ec2:
    region: "{{ ec2_region }}"
    state: absent
    instance_ids: "{{ all_nodes.instances | map(attribute='instance_id') | list }}"
  register: result
  when: all_nodes.instances

- name: Get the VPC ID for {{ ec2_name_prefix }}
  ec2_vpc_net_facts:
    filters:
      "tag:Name": "{{ ec2_name_prefix }}-site"
    region: "{{ ec2_region }}"
  register: vpc_net_facts


- name: use set fact for easier variables
  set_fact:
    ec2_vpc_id: "{{vpc_net_facts.vpcs[0].id}}"
    ec2_security_group: "{{ ec2_name_prefix }}-insecure_all"
  when: vpc_net_facts.vpcs|length > 0 and ec2_security_group is undefined

- name: Deleted EC2 security group for VPC vpc-{{ ec2_name_prefix }}
  ec2_group:
    name: "{{ec2_security_group}}"
    region: "{{ ec2_region }}"
    vpc_id: "{{ec2_vpc_id}}"
    state: absent
  register: delete_sg
  until: delete_sg is not failed
  retries: 50
  when: vpc_net_facts.vpcs|length > 0


- name: Delete subnet for {{ ec2_name_prefix }}-vpc
  ec2_vpc_subnet:
    region: "{{ ec2_region }}"
    az: "{{ec2_az}}"
    vpc_id: "{{ec2_vpc_id}}"
    cidr: "{{ec2_subnet}}"
    state: absent
  when: vpc_net_facts.vpcs|length > 0


- name: vpc internet gateway is deleted for vpc-{{ ec2_name_prefix }}
  ec2_vpc_igw:
    region: "{{ ec2_region }}"
    vpc_id: "{{ec2_vpc_id}}"
    state: absent
  when: vpc_net_facts.vpcs|length > 0


- name: grab route information for {{ ec2_name_prefix }} on {{ ec2_region }}
  ec2_vpc_route_table_facts:
    region: "{{ ec2_region }}"
    filters:
      vpc_id: "{{ec2_vpc_id}}"
  register: route_table_facts
  when: vpc_net_facts.vpcs|length > 0


- name: vpc public subnet route table is deleted
  ec2_vpc_route_table:
    region: "{{ ec2_region }}"
    vpc_id: "{{ec2_vpc_id}}"
    route_table_id: "{{item.id}}"
    lookup: id
    state: absent
  with_items: "{{route_table_facts.route_tables}}"
  when: vpc_net_facts.vpcs|length > 0 and item.associations == []


- name: set keys for instance creation dynamically since key was not supplied by user
  set_fact:
    ec2_key_name: "{{ ec2_name_prefix }}-key"

- name: delete ssh key pair for workshop {{ ec2_name_prefix }}
  ec2_key:
    name: "{{ec2_key_name}}"
    region: "{{ ec2_region }}"
    state: absent

- name: delete AWS VPC {{ ec2_name_prefix }}
  ec2_vpc_net:
    name: "{{ ec2_name_prefix }}-vpc"
    cidr_block: "{{ ec2_subnet }}"
    region: "{{ ec2_region }}"
    state: absent
