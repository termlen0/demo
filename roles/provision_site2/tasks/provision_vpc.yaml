# Create the VPC, SG and subnets

- name: CREATE AWS VPC {{ ec2_name_prefix }}-site{{ site }}
  ec2_vpc_net:
    name: "{{ ec2_name_prefix }}-site{{ site }}"
    cidr_block: "{{ec2_subnet}}"
    region: "{{ ec2_region }}"
    tags:
      Project: "NetDevOps - site{{ site }}"
  register: create_vpc
  when: ec2_vpc_id is undefined
  until: create_vpc is not failed
  retries: 5

- name: CREATE EC2 SECURITY GROUP FOR VPC NAMED {{ ec2_name_prefix }}-site{{ site }}
  ec2_group:
    name: "{{ ec2_name_prefix }}-insecure_all"
    description: all ports open
    region: "{{ ec2_region }}"
    vpc_id: "{{create_vpc.vpc.id}}"
    tags:
      Project: "NetDevOps - site{{ site }}"
    rules:
      - proto: 47
        to_port: -1
        from_port: -1
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        to_port: 443
        from_port: 443
        cidr_ip: 0.0.0.0/0
      - proto: icmp
        to_port: -1
        from_port: -1
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        to_port: 80
        from_port: 80
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        to_port: 22
        from_port: 22
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        to_port: 3389
        from_port: 3389
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        to_port: 8888
        from_port: 8888
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        to_port: 8080
        from_port: 8080
        cidr_ip: 0.0.0.0/0
    rules_egress:
      - proto: all
        cidr_ip: 0.0.0.0/0
  when: ec2_vpc_id is undefined
  register: create_sg
  until: create_sg is not failed
  retries: 5

- name: CREATE SUBNET FOR {{ ec2_name_prefix }}-site{{ site }}
  ec2_vpc_subnet:
    region: "{{ ec2_region }}"
    az: "{{ ec2_az }}"
    vpc_id: "{{ create_vpc.vpc.id }}"
    cidr: "{{ ec2_subnet }}"
    wait_timeout: 600
    resource_tags:
      Project: "NetDevOps - site{{ site }}"
  register: create_subnet
  when: ec2_vpc_id is undefined
  until: create_subnet is not failed
  retries: 15

- name: VPC INTERNET GATEWAY IS PRESENT FOR {{ create_vpc.vpc.id }}
  ec2_vpc_igw:
    region: "{{ ec2_region }}"
    vpc_id: "{{ create_vpc.vpc.id }}"
    tags:
      Project: "NetDevops - site{{ site }}"
  register: igw
  until: igw is not failed
  retries: 15
  when: ec2_vpc_id is undefined

- name: VPC PUBLIC SUBNET ROUTE TABLE IS PRESENT FOR {{ create_vpc.vpc.id }}
  ec2_vpc_route_table:
    region: "{{ ec2_region }}"
    vpc_id: "{{ create_vpc.vpc.id }}"
    subnets:
      - "{{ create_subnet.subnet.id }}"
    routes:
      - dest: 0.0.0.0/0
        gateway_id: "{{ igw.gateway_id }}"
    tags:
      Project: "NetDevOps - site{{ site }}"
  register: routetable
  until: routetable is not failed
  retries: 5
  when: ec2_vpc_id is undefined

- name: SET VARIABLES FOR INSTANCE CREATION DYNAMICALLY SINCE VPC WAS NOT SUPPLIED BY USER
  set_fact:
    ec2_vpc_id: "{{ create_vpc.vpc.id }}"
    ec2_security_group: "{{ ec2_name_prefix }}-insecure_all"
    ec2_vpc_subnet_id: "{{ create_subnet.subnet.id }}"
  when: ec2_vpc_id is undefined

- name: CREATE SSH KEY PAIR  {{ ec2_name_prefix }}
  ec2_key:
    name: "{{ ec2_name_prefix }}-key"
    region: "{{ ec2_region }}"
  register: create_key
  when: create_key is undefined

- name: SAVE PRIVATE KEY
  copy:
    content: "{{ create_key.key.private_key }}"
    dest: "{{ playbook_dir }}/{{ec2_name_prefix}}/{{ec2_name_prefix}}-private.pem"
    mode: '0400'
  when: create_key.changed
